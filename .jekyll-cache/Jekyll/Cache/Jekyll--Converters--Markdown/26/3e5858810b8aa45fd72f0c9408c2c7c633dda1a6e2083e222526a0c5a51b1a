I"‘5<p>I have a webscraper that Iâ€™ve written with beautifulsoup4 to scrape indeed for a list of skills associated with GIS and how many jobs are associated with those skills. The results are returned as a JSON list.
Now this is very useful by itself, but what if I want to have it be a serverless function that can be run from anywhere and not have to run it on my local machine? Maybe I could even have it run at set intervals and store the results in a database later.<br />
Well luckily thereâ€™s something called AWS lambda that lets me do just that. Hereâ€™s how to port your python functions to lambda.</p>

<p>Letâ€™s take a look at this code.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="c1">#This will be a lambda function
#@Author: Benjamin Johnson
</span><span class="kn">import</span> <span class="nn">json</span>
<span class="kn">import</span> <span class="nn">requests</span>
<span class="kn">from</span> <span class="nn">bs4</span> <span class="kn">import</span> <span class="n">BeautifulSoup</span>
<span class="kn">import</span> <span class="nn">re</span>
<span class="kn">import</span> <span class="nn">time</span>

<span class="k">def</span> <span class="nf">lambda_handler</span><span class="p">(</span><span class="n">event</span><span class="p">,</span> <span class="n">context</span><span class="p">):</span>
    <span class="c1">#'C%23'='C#', #'C+2B%2B'='C++',
</span>    <span class="c1">#Key: used in the page url for scraping,  Value: human readable version written to output
</span>    <span class="n">terms</span><span class="o">=</span><span class="p">{</span><span class="s">"GIS"</span><span class="p">:</span><span class="s">"GIS"</span><span class="p">,</span><span class="s">"GIS+Python"</span><span class="p">:</span><span class="s">"GIS Python"</span><span class="p">,</span><span class="s">"GIS+Java"</span><span class="p">:</span><span class="s">"GIS Java"</span><span class="p">,</span> <span class="s">"GIS+SQL"</span><span class="p">:</span><span class="s">"GIS SQL"</span><span class="p">,</span> 
        <span class="s">"GIS+Ruby"</span><span class="p">:</span><span class="s">"GIS Ruby"</span><span class="p">,</span> <span class="s">"GIS+Javascript"</span><span class="p">:</span><span class="s">"GIS Javascript"</span><span class="p">,</span><span class="s">"GIS+HTML"</span><span class="p">:</span><span class="s">"GIS HTML"</span><span class="p">,</span>
        <span class="s">"GIS+CSS"</span><span class="p">:</span><span class="s">"GIS CSS"</span><span class="p">,</span> <span class="s">"GIS+C"</span><span class="p">:</span><span class="s">"GIS C"</span><span class="p">,</span> <span class="s">"GIS+C%23"</span><span class="p">:</span><span class="s">"GIS C#"</span><span class="p">,</span> <span class="s">"GIS+C%2B%2B"</span><span class="p">:</span><span class="s">"GIS C++"</span><span class="p">,</span>
        <span class="s">"GIS+BASH"</span><span class="p">:</span><span class="s">"GIS Bash"</span><span class="p">,</span> <span class="s">"GIS+SHELL"</span><span class="p">:</span><span class="s">"GIS Shell"</span><span class="p">,</span> <span class="s">"GIS+UNIX"</span><span class="p">:</span><span class="s">"GIS Unix"</span><span class="p">,</span>
        <span class="s">"GIS+PHP"</span><span class="p">:</span><span class="s">"GIS PHP"</span><span class="p">,</span> <span class="s">"GIS+typescript"</span><span class="p">:</span><span class="s">"GIS Typescript"</span><span class="p">,</span><span class="s">"GIS+SWIFT"</span><span class="p">:</span><span class="s">"GIS Swift"</span><span class="p">,</span>
        <span class="s">"GIS+OBJECTIVE+C"</span><span class="p">:</span><span class="s">"GIS Objective C"</span><span class="p">,</span> <span class="s">"GIS+.NET"</span><span class="p">:</span><span class="s">"GIS .Net"</span><span class="p">,</span> <span class="s">"GIS+MATLAB"</span><span class="p">:</span><span class="s">"GIS MATLAB"</span><span class="p">,</span>
        <span class="s">"GIS+MAPBOX"</span><span class="p">:</span><span class="s">"GIS MapBox"</span><span class="p">,</span> <span class="s">"GIS+ARCGIS"</span><span class="p">:</span><span class="s">"GIS ArcGIS"</span><span class="p">,</span><span class="s">"GIS+Rust"</span><span class="p">:</span><span class="s">"GIS Rust"</span><span class="p">,</span>
        <span class="s">"GIS+QGIS"</span><span class="p">:</span><span class="s">"GIS QGIS"</span><span class="p">,</span> <span class="s">"GIS+LEAFLET"</span><span class="p">:</span><span class="s">"GIS Leaflet"</span><span class="p">,</span> <span class="s">"GIS+PostgreSQL"</span><span class="p">:</span><span class="s">"GIS PostgreSQL"</span><span class="p">,</span> 
        <span class="s">"GIS+SQL+SERVER"</span><span class="p">:</span><span class="s">"GIS SQL Server"</span><span class="p">,</span> <span class="s">"GIS+ORACLE"</span><span class="p">:</span><span class="s">"GIS Oracle"</span><span class="p">,</span> <span class="s">"GIS+NOSQL"</span><span class="p">:</span><span class="s">"GIS NoSQL"</span><span class="p">,</span>
        <span class="s">"GIS+MONGODB"</span><span class="p">:</span><span class="s">"GIS MongoDB"</span><span class="p">,</span> <span class="s">"GIS+Cassandra"</span><span class="p">:</span><span class="s">"GIS Cassandra"</span><span class="p">,</span><span class="s">"GIS+REDIS"</span><span class="p">:</span><span class="s">"GIS Redis"</span><span class="p">,</span>
        <span class="s">"GIS+HBASE"</span><span class="p">:</span><span class="s">"GIS HBASE"</span><span class="p">,</span> <span class="s">"GIS+DYNAMODB"</span><span class="p">:</span><span class="s">"GIS DynamoDB"</span><span class="p">,</span> <span class="s">"GIS+AWS"</span><span class="p">:</span><span class="s">"GIS AWS"</span><span class="p">,</span>
        <span class="s">"GIS+HADOOP"</span><span class="p">:</span><span class="s">"GIS HADOOP"</span><span class="p">,</span> <span class="s">"GIS+AutoCAD"</span><span class="p">:</span><span class="s">"GIS AutoCAD"</span><span class="p">,</span><span class="s">"GIS+CIVIL3D"</span><span class="p">:</span><span class="s">"GIS Civil3D"</span><span class="p">,</span>
        <span class="s">"GIS+VBA"</span><span class="p">:</span><span class="s">"GIS VBA"</span><span class="p">,</span> <span class="s">"GIS+ERDAS+IMAGINE"</span><span class="p">:</span><span class="s">"GIS ERDAS IMAGINE"</span><span class="p">,</span> <span class="s">"GIS+ENVI"</span><span class="p">:</span><span class="s">"GIS ENVI"</span><span class="p">,</span>
        <span class="s">"GIS+GDAL"</span><span class="p">:</span><span class="s">"GIS GDAL"</span><span class="p">,</span> <span class="s">"GIS+CAD"</span><span class="p">:</span><span class="s">"GIS CAD"</span><span class="p">}</span>
    <span class="n">jobs</span><span class="o">=</span><span class="p">[]</span>
    <span class="k">for</span> <span class="n">key</span><span class="p">,</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">terms</span><span class="p">.</span><span class="n">items</span><span class="p">():</span>  
        <span class="n">page</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">"https://www.indeed.com/jobs?q="</span><span class="o">+</span><span class="n">key</span><span class="p">)</span> 
        <span class="n">soup</span> <span class="o">=</span> <span class="n">BeautifulSoup</span><span class="p">(</span><span class="n">page</span><span class="p">.</span><span class="n">content</span><span class="p">,</span> <span class="s">'html.parser'</span><span class="p">)</span>
        <span class="n">n_jobs</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="c1">#if no results returned from the page then .group(0) will kick up an error
</span>        <span class="k">try</span><span class="p">:</span>
            <span class="k">for</span> <span class="n">meta</span> <span class="ow">in</span> <span class="n">soup</span><span class="p">.</span><span class="n">find_all</span><span class="p">(</span><span class="s">'meta'</span><span class="p">,</span> <span class="n">attrs</span><span class="o">=</span><span class="p">{</span><span class="s">"name"</span><span class="p">:</span> <span class="s">"description"</span><span class="p">}):</span>
                <span class="n">n_jobs</span> <span class="o">=</span> <span class="n">re</span><span class="p">.</span><span class="n">search</span><span class="p">(</span><span class="s">'\d+'</span><span class="p">,</span> <span class="n">meta</span><span class="p">[</span><span class="s">"content"</span><span class="p">].</span><span class="n">replace</span><span class="p">(</span><span class="s">','</span><span class="p">,</span><span class="s">''</span><span class="p">)).</span><span class="n">group</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
        <span class="k">except</span><span class="p">:</span> 
            <span class="k">print</span><span class="p">(</span><span class="s">"no results for {value}"</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">value</span><span class="o">=</span><span class="n">value</span><span class="p">))</span>
        <span class="n">scrape_info</span><span class="o">=</span><span class="p">{</span>
        <span class="s">'input'</span> <span class="p">:</span> <span class="n">event</span><span class="p">,</span>
        <span class="s">'status_code'</span> <span class="p">:</span> <span class="n">page</span><span class="p">.</span><span class="n">status_code</span><span class="p">,</span>
        <span class="s">'search term'</span> <span class="p">:</span> <span class="n">value</span><span class="p">,</span>
        <span class="s">'number of jobs'</span> <span class="p">:</span> <span class="n">n_jobs</span><span class="p">,</span>
        <span class="s">'date'</span> <span class="p">:</span> <span class="n">time</span><span class="p">.</span><span class="n">strftime</span><span class="p">(</span><span class="s">"%d_%m_%Y"</span><span class="p">)</span>
        <span class="p">}</span>
        <span class="k">print</span><span class="p">(</span><span class="n">scrape_info</span><span class="p">)</span>
        <span class="n">jobs</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">scrape_info</span><span class="p">)</span>

    <span class="k">return</span> <span class="n">jobs</span>
    </code></pre></figure>

<p>Notice that Iâ€™ve called my function lambda_handler, this is important for portability with lambda. The python file must also be called lambda_function.py</p>

<p><img src="/assets/screenshots/Screen%20Shot%202018-06-24%20at%203.23.46%20PM.png" alt="My helpful screenshot" /></p>

<p>This is the folder that I have my function in. I have it named indeed_scraper.py so I will need to rename it to lambda_function.py.</p>

<p>My function relies on packages that are not included in the standard library, namely beautifulsoup4 and requests. We will need to install these packages locally.</p>

<p>We can do this by adding the -t flag to pip.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">pip3 <span class="nb">install </span>requests <span class="nt">-t</span> /Users/benjohnson/desktop/MyFirstLambda/
pip3 <span class="nb">install </span>bs4 <span class="nt">-t</span> /Users/benjohnson/desktop/MyFirstLambda/</code></pre></figure>

<p>If the packages were successfully installed, your folder should look like this:</p>

<p><img src="/assets/screenshots/Screen%20Shot%202018-06-24%20at%204.33.31%20PM.png" alt="My helpful screenshot" /></p>

<p>Change directory into this folder and create a .zip</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nb">cd </span>desktop
<span class="nb">cd </span>MyFirstLambda
zip <span class="nt">-r</span> MyFirstLambda.zip ./</code></pre></figure>

<p>Follow the steps outlined in <a href="/aws/your-first-lambda-function">an earlier tutorial</a>
 to create a basic lambda function</p>

<p>Go to your lambda page and upload the .zip with your python file and package contents.</p>

<p><img src="/assets/screenshots/Screen%20Shot%202018-06-24%20at%203.42.50%20PM.png" alt="My helpful screenshot" /></p>

<p><img src="/assets/screenshots/Screen%20Shot%202018-06-24%20at%203.43.10%20PM.png" alt="My helpful screenshot" /></p>

<p><img src="/assets/screenshots/Screen%20Shot%202018-06-24%20at%204.03.52%20PM.png" alt="My helpful screenshot" /></p>

<p>Hit save to upload your files. 
If it worked your code should appear in the code window.</p>

<p><img src="/assets/screenshots/Screen%20Shot%202018-06-24%20at%204.18.29%20PM.png" alt="My helpful screenshot" /></p>

<p>My function takes about 60 seconds to run, so I will increase the max allowed runtime from 3 seconds to 1 min 30 seconds.</p>

<p><img src="/assets/screenshots/Screen%20Shot%202018-06-24%20at%204.22.23%20PM.png" alt="My helpful screenshot" /></p>

<p>Save and hit the test button when you are ready, the test input doesnâ€™t matter here because we are scraping from predefined website URLs and donâ€™t use any input.</p>

<p><img src="/assets/screenshots/Screen%20Shot%202018-06-24%20at%204.21.49%20PM.png" alt="My helpful screenshot" /></p>

<p>A successfull web scraping! The output is returned as a JSON list, and we can easily store it with whatever AWS service we choose. Since we are using python we would need to use the boto3 package on Amazon to achieve this.</p>

:ET